{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GitEHR","text":"<p>GitEHR is a decentralised and portable health record powered by Git, cryptography, and open standards.</p>"},{"location":"#the-problem","title":"The Problem","text":"<p>Traditional health interoperability focuses on sending data from one Organisation-Centric Database to a different Organisation-Centric Database.</p> <p>Databases work fine inside the walls of a particular organisation that invested resources in developing a bespoke solution for their needs.</p> <p>The problem arises when trying to interoperate databases between organisations. Even in instances where organisations have the exact same EHR deployed, their local deployment customisations will make it difficult, if not impossible, to transfer data. If data can be moved, an associated cost is attached to 'translating' the data from one organisation's structure to another. This must then be done between every single organisation, for every data item: an exponential problem. One solution may be creating larger databases - instead of siloing to a single organisation, span the database to cover a region. Unfortunately, the same interoperability issues still exist and may even compound at regional, national, or international scales.</p> <p>Looking at the well-established tech world, there are no successful examples of the traditional healthcare approach working at scale.</p>"},{"location":"#gitehrs-solution","title":"GitEHR's Solution","text":"<p>Distributed Version Control Software (DVCS), such as Git, provides exemplary proof of how to engineer multi-contributor and secure. Crucially, these private repositories are agnostic of the software used to view or manipulate them.</p> <p>Though areas which require specialised healthcare technology exist, these health-specific solutions are not always required. Many problems faced in healthcare have already been solved by the wider tech world - which is why GitEHR draws extensively on existing technology.</p> <p>Rob Dyke Says</p> <p>\"All software has already been written.\"</p> <p>Medical records need interoperable and extensible file formats. GitEHR will have an open standard with a reference implementation that is open-source. It will enable many other implementations to exist. Multiple platforms for reading, writing, and processing records can exist.</p> <p>GitEHR solves the interoperability problem, setting the foundations to solve many other problems of health technology.</p> <p>The paradigm must change. This is the beginning.</p>"},{"location":"about/Databasechester/","title":"Databasechester","text":"<p>To try to explain why I have come to the conclusion that #DatabasesAreHarmful and #FilesAreTheAnswer</p> <p>Join me in imagining my fictional city Databasechester in which there is no such thing as a document file format. Every organisation keeps its internal documents in a database inside its organisation. And of course this works adequately well, inside their organisation. Putting aside the fact that they are locked in to their vendor</p> <p>But now, in our fictional city, the local Council want to send documents to the Fire Department. But the Fire Department have their own, different, document management database. So the Council have to commission development of some software to 'translate' a Council document into a Fire Department document.</p> <p>It kind of works, but it was expensive to have built, and there are features in the Council's system that can't be represented accurately in the Fire Department system, so the translation is 'lossy'. But in some way the bulk of the communication gets through and the Council can now send a document to the Fire Department.</p> <p>So far so awful. But now the Fire Department needs to send a reply. Problem. They also now need to commission a piece of software to convert from their internal document database to the Council's. More expense and difficulty ensue, but after a while the Fire Department finally now has the ability to communicate back to the Council.</p> <p>But - there is also the Police Department to communicate with. More software is commissioned by both organisations.</p> <p>As the Council needs to communicate with more and more departments and teams, the amount of work increases rapidly, creating huge costs and delays, and also creating lossy, poor quality communication.</p> <p>Nobody would be surprised if a city which managed simple documents like this could achieve very little, despite huge amounts of money being spent on interoperability.</p> <p>Is this starting so sound familiar to anyone working in health tech? The absence of any kind of file format for medical records has created this exact scenario within the NHS. The NHS is a city of databases, with no document file format.</p>"},{"location":"about/about/","title":"About GitEHR","text":"<p>GitEHR is the product of over a decade of learning and thought within the health technology industry. It provides the solution for a life-long clinical record, which is inherently patient-centric, and does not have the interoperability problems of other types of health records.</p>"},{"location":"about/contributors/","title":"Contributors","text":""},{"location":"about/contributors/#dr-marcus-baw","title":"Dr Marcus Baw","text":"<p>Dr Marcus Baw</p> <p>\"I'm a self-taught software developer, so you are almost certainly better than me.\"</p> <p>Dr Marcus Baw is a GP in North Yorkshire, which is in the continent of Europe. He is a proud Yorkshireman. He is a father, a guitarist, and a mountain biker, although not necessarily in that order.</p> <p>He qualified in Medicine from the University of Liverpool in 2000 and spent around 10 years in acute hospital specialities (Emergency Medicine, Anaesthesia and ICU), mostly in the Liverpool and Manchester region, before deciding to change career paths and completing GP training in Wigan in 2011.</p> <p>Somewhere between programming and clinical medicine exists a nebulous area called Clinical Informatics. He was the Chair of the RCGP Health Informatics Group throughout the COVID pandemic (2019-2022) and is a Fellow of the Faculty of Clinical Informatics.</p> <p>Since beginning work in health technology over ten years ago, Dr Baw has struggled with how to create an interoperable and portable health record.</p> <p>Though much work already exists regarding health interoperability, he sadly concluded that all of it is misguided. The decision to adopt databases for the content of health records was wrong. It has resulted in chaos across health tech, with vast sums of money wasted and un-interoperable records.</p> <p>Throughout his health informatics career, Dr Baw has learned as much as possible about how existing tech solutions can benefit the health tech space.</p> <p> </p>"},{"location":"about/gitEHRstory/","title":"The GitEHR story","text":""},{"location":"about/gitEHRstory/#by-dr-marcus-baw","title":"By Dr Marcus Baw","text":"<p>As a clinician starting to become interested in health tech around 2011 - as the National Project for IT (NPfIT) was collapsing - I found it difficult to find a 'way in' to the world of GP IT. Clinicians were not wanted in a world dominated by large companies delivering unusable and 'legacy' software from day one.</p> <p>Eventually, I found two ways in: NHS Hack Day, and the RCGP Health Informatics Group. These were my starting points, but since then, I've been almost full-time in health informatics in various roles, from the unorthodox: freelance General Hacktitioner to the very much orthodox: Chair of the RCGP Health Informatics Group (HIG).</p> <p>I've had a somewhat unusual Clinical Informatics career in that I've also learned a lot about the technical underpinnings of the software. Unlike many clinical informaticians and NHS digerati, I learned to write code and become deeply technical, giving me a different view of the proffered health tech solutions.</p> <p>I couldn't understand that every single current health tech solution is database-backed, and thereby inherently Organisation-Centric.</p> <p>Even proposed fixes such as FHIR and OpenEHR, designed to improve interoperability, are imperfect as they are still centralised and Organisation-Centric, database-backed solutions which fall into the same trap as all the others.</p> <p>Size doesn't matter: eventually, all organisations have their 'edges'. Here is where absolute and unresolvable problems of interoperability exist.</p> <p>I've been puzzling this over for a decade for a solution. In that time, I've learned more about how the tech world works and what existing solutions can be brought into health.</p> <p>Git has been my primary DVCS during this time too. It took me a long time to realise that this issue in healthcare is identical to the CVS vs DVCS debate of 15-20 years ago in 'normal' tech. A debate that was unequivocally won by DVCS.</p> <p>At the beginning of my health tech journey, I remember googling 'medical file format' thinking the solution was here. There was little to find aside from some barmy XML dialect. Also, technology people disparaged files, pointing to all the work surrounding databases. I've spent years of experience learning about these systems, eventually coming full circle to where I began.</p>"},{"location":"about/gitEHRstory/#files-are-the-answer","title":"Files are the answer.","text":"<p>It feels like starting completely from scratch.</p> <p>In some ways, it is.</p> <p>This doesn't mean all the work accomplished in the world of healthcare interoperability needs to be discarded. For example, much can be learned from FHIR and OpenEHR to help inform the structure of a health record.</p> <p>Tip</p> <p>If it helps, you can do what my friend Kevin Monk did: realise that a file is like a 'mini database all of its own' on a disk. And now, relax.</p>"},{"location":"about/design/design/","title":"Overview","text":"<p>GitEHR has been designed to solve the problems inherent to medical records and to be extensible in the future.</p> <p>It aims to use low-tech solutions and be completely reliable.</p> <p>Natively, GitEHR is a technical standard that no clinician would use directly. It is a foundational technology upon which other systems can be built. These higher-level systems will focus on improving clinical workflows.</p>"},{"location":"about/design/design/#design-principles","title":"Design Principles","text":""},{"location":"about/design/design/#audit-trail","title":"Audit Trail","text":""},{"location":"about/design/design/#longevity","title":"Longevity","text":"<p>Health records need to last a long time. Sometimes, they exist before a person is born and last well after death. However, healthcare software is a different matter. Like all software, there is a lifecycle to its existence. Some companies fail, some grow, and some get acquired by bigger companies. Software tends to last less time than humans. In the current closed-source EHR world, users and managers of patient data do not have access to the source code. Due to the inseparable tight coupling of patient data record structure to the database used inside the software platform, it becomes challenging to salvage the data in a usable form once the software dies. GitEHR seeks to separate the clinical record from the software used to view and manage it. It will ensure patient records stand alone, separate from the database structure of any single proprietary software supplier. Using time-tested, simple technologies - such as flat files, directories, and disks - helps reduce GitEHR's dependence on the latest new and shiny trend. It ensures that once viewing and editing software reaches its inevitable end of life, new software can seamlessly replace the old without affecting clinical care.</p>"},{"location":"about/design/design/#no-lock-in","title":"No Lock-In","text":"<p>GitEHR is engineered to be an interoperable file format for clinical records, free from Vendor Lock-In. Vendor Lock-in is a well-known term in the technology industry. It describes the result of data tied inherently to a specific product. One mitigation is interoperable file formats. For example, the <code>.odf</code> or <code>.docx</code> file formats allow one to use a different editor software, if the current becomes unaffordably expensive, without providing sufficient value. In healthcare - and governmental IT in general - vendor lock-in seems to be a particular problem: there are no interoperable file formats. Even basic data in simple IT systems is wholly linked to the database schema of the software used. Vendor lock-in leads to problems throughout the entire software lifecycle.</p>"},{"location":"about/design/design/#patient-centricity","title":"Patient-Centricity","text":"<p>Informaticians and health technologists have been proposing the idea of 'Patient-Centric Health Records' for a long time. They have been unable to deliver a patient-centric record because the EHR uses a database and is thereby inherently organisation-centric.</p> <p>Success</p> <p>Digesting this concept is the most crucial step to understanding why progress cannot be made in EHR without changing the paradigm.</p>"},{"location":"about/design/design/#one-patient-one-record","title":"One patient, one record","text":"<p>A GitEHR clinical record is only ever the record of one patient. This ensures a clean separation of the data in any other patient records and organisational data. Organisations giving care keep a local record of the patient's care.</p>"},{"location":"about/design/design/#separation-from-organisational-information","title":"Separation from Organisational information","text":"<p>A GitEHR clinical record is completely separated from the records of other patients and any organisation-level information. This separation allows multiple organisations to contribute to the GitEHR, akin to how numerous contributors can work on the same Git repository. It also allows database operations to be performed over multiple patients if required. An organisation-level database is useful as a healthcare organisation may care for thousands or even millions of patients. But this must never be the canonical Source of Truth of the patient record.</p>"},{"location":"about/design/design/#portability","title":"Portability","text":"<p>Portability is a natural emergent property of complete Patient-Centricity. It is therefore baked into GitEHR. When the files of a record are represented in a single directory on a disk, they can be shared easily with other caregiving organisations. They can even be downloaded onto a portable storage medium, like a USB stick. This can be read, updated and used comprehensively in this state. A prime example includes if the patient goes off-grid because they are on an expedition or a colony ship to Mars. Later, changes made can be merged back into the record.</p>"},{"location":"about/design/design/#provenance","title":"Provenance","text":"<p>Clinicians need absolute trust in the integrity of information in the clinical record. GitEHR has been designed to ensure that its containing information is completely trustworthy whilst remaining a distributed and decentralised system. This is achieved using existing, reliable and time-tested technology used to establish trust in other parts of tech, including: * Cryptographic signatures * Cryptographic hashes Using these technologies to sign and audit-trail commits to the clinical record already represents a significant advance on the current 'state of the art'.</p>"},{"location":"about/design/design/#existing-audit-trailing-is-broken","title":"Existing audit trailing is broken","text":"<p>In the current typical Electronic Health Record (EHR) program, the clinical entries are saved into a database, often with (but not always!) an audit trail built into the system. This highlights any potential tampering of records by a nefarious user attempting to doctor the details of an incident to the system admins. This places the locus of trust entirely on the system admins, the organisation's leadership, and the EHR design. There has never been a safe, successful, or effective example of placing this level of trust on such few people.</p>"},{"location":"about/design/design/#the-uk-post-office-scandal","title":"The UK Post Office Scandal","text":"<p>This was an example of why clinicians cannot trust their careers and lives to organisational database-level audit trailing. A series of errors occurred in the system used to manage the Post Office's banking service. This resulted in large discrepancies, including huge cash shortfalls in the cash drawers at the end of the day. Each of these discrepancies was the fault of the system and its design. However, its admins believed the system, not the users. The IT company which built the system believed the system, not the users. The Post Office's senior leadership backed the system for which they'd paid millions, not their staff. Many people were jailed, some committed suicide, and many thousands of lives were ruined. An audit trail was built into this system, but it didn't work. Similar discrepancies are equally likely in clinical records. A simple example is if an EHR failed to show a severe allergy to a clinician. The clinician administers a drug which kills the patient. The system is at fault but the clinician is scapegoated. The system admins and organisational leadership will not accept responsibility, jeopardising their multi-million-pound investment. Another danger is that a user with admin access can be induced to falsify records in the audit trail, which would be essentially undetectable under the current paradigm.</p>"},{"location":"about/design/design/#why-gitehr-is-different","title":"Why GitEHR is different","text":"<p>Entries in a GitEHR are each cryptographically signed. This means the entry content is followed by a cryptographic signature of the content, which can be mathematically proved to have been created only using that specific clinician's private key. Assuming private keys are kept secure, there isn't enough computation power on the planet to overcome this proof. Any changes to the clinical entry content result in an unpredictably different cryptographic signature, making it invalid and immediately exposing tampering. GitEHR entries are sequential: each commit has a direct parent commit. This way, entries cannot be reordered without changing the content, thus invalidating the signature. Legitimate factual changes are supported using this same mechanism. The change is made transparent through the commit tree. Both the original and updated versions can be viewed, with the person who made the change becoming easily identifiable. GitEHR is completely open source, meaning that 'with enough eyes looking at a problem, all bugs are shallow'. We expect these fundamental GitEHR trust features will be extremely safe and reliable.</p>"},{"location":"about/design/design/#redundancy","title":"Redundancy","text":"<p>Every organisation providing care to a patient keeps a complete copy of their entire GitEHR healthcare record. Health records are small in the context of modern data management. All organisations to which a patient is granted access keep an up-to-date record copy. Distributing the storage of medical records makes them extremely resilient to loss, deletion or corruption.</p>"},{"location":"about/design/design/#tamper-resistance","title":"Tamper resistance","text":"<p>Using the same consensus principle from blockchain technology to ensure there is only one version of the truth, GitEHR records which have been altered in any way are instantly identified.</p>"},{"location":"about/design/design/#security","title":"Security","text":"<p>...content from security.md...</p>"},{"location":"about/design/design/#simplicity","title":"Simplicity","text":"<p>The content of the health record should be in plain text, in files on disk. In plain text: content is readable even in low-tech environments. Ideally, a viewer will render this plain text into a more usable and feature-rich application view. But the text-on-disk view exists as a fallback. In files: files can easily work interoperably across all operating systems. On disk: as opposed to being in a database*. !!! \"Of course, databases are also on disk.\"     Though databases also exist on disk, there is a difference between being buried in a database versus having easy access to a file.</p>"},{"location":"about/design/design/#new-entries-are-saved-in-a-new-file","title":"New entries are saved in a new file","text":"<p>Medical practice can usually be distilled to an 'atomic unit of care'. For a clinic visit, a single entry or a few linked entries could summarise the visit.</p>"},{"location":"about/design/design/#gitehr-entries-are-linkable","title":"GitEHR entries are linkable","text":"<p>As modern clinical records become more complex, clinicians need help finding specific data items. The Internet has solved this problem by using the URL or Internet 'link'. Somehow, the most basic of technologies has not yet found its way into the current paradigm.</p>"},{"location":"about/design/design/#structure","title":"Structure","text":"<p>...content from structure.md...</p>"}]}